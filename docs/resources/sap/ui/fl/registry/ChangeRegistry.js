/*!
 * OpenUI5
 * (c) Copyright 2009-2021 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/base/util/each","sap/ui/fl/initial/_internal/changeHandlers/ChangeHandlerStorage","sap/ui/fl/registry/ChangeRegistryItem","sap/ui/fl/registry/Settings","sap/ui/fl/Utils","sap/ui/fl/requireAsync","sap/base/Log"],function(e,n,r,t,a,i,o){"use strict";var s=function(){};s._instance=undefined;s.prototype._oDefaultChangeHandlers={};s.prototype._mDeveloperModeChangeHandlers={};var g={};s.prototype.registerPredefinedChangeHandlers=function(e,n){this._oDefaultChangeHandlers=e;this._mDeveloperModeChangeHandlers=n};s.addRegistrationPromise=function(e,n){g[e]=n;n.catch(function(){}).then(function(){delete g[e]})};s.waitForChangeHandlerRegistration=function(e){if(g[e]){return g[e].catch(function(){})}return new a.FakePromise};s.getInstance=function(){if(!s._instance){s._instance=new s}return s._instance};s.prototype.registerControlsForChanges=function(r){var t=[];e(r,function(e,r){var a={};if(Array.isArray(r)){r.forEach(function(e){a[e.changeType]=e.changeHandler})}else{a=r}t.push(n.registerChangeHandlersForControl(e,a))});return Promise.all(t)};s.prototype._getInstanceSpecificChangeRegistryItem=function(e,n,r){var t=r&&r.getChangeHandlerModulePath(n);if(typeof t!=="string"){return new a.FakePromise(undefined)}return i(t).then(function(t){var a=t[e];if(!a){return undefined}var i=this._getChangeHandlerEntry(e,a);var o={changeType:e,changeHandler:i.changeHandler,layers:i.layers};var s=r.getControlType(n);var g=this._createChangeRegistryItemForSimpleChange(s,o);return g}.bind(this)).catch(function(e){o.error("Flexibility registration for control "+r.getId(n)+" failed to load module "+t+"\n"+e.message);return undefined})};s.prototype._getChangeHandlerEntry=function(e,n){var r={};var t=Object.keys(this._mDeveloperModeChangeHandlers);if(!n||!n.changeHandler){r.changeHandler=n}else{r=n}if(r.changeHandler==="default"){r.changeHandler=this._oDefaultChangeHandlers[e]}else if(t.indexOf(e)>-1){throw Error("You can't use a custom change handler for the following Developer Mode change types: "+t.toString()+". Please use 'default' instead.")}return r};s.prototype.getChangeHandler=function(e,n,r,t,a){return this._getInstanceSpecificChangeRegistryItem(e,r,t).then(function(r){var t=r||this._getRegistryItem(n,e);if(!t){throw Error("No Change handler registered for the Control and Change type")}if(!this._isRegistryItemValidForLayer(t,a)){throw Error("Change type "+e+" not enabled for layer "+a)}return t.getChangeHandler()}.bind(this))};s.prototype._createChangeRegistryItemForSimpleChange=function(e,n){var a=Object.assign({},t.getDefaultLayerPermissions());var i=n.layers;if(i){Object.keys(i).forEach(function(e){if(a[e]===undefined){throw Error("The Layer '"+e+"' is not supported. Please only use supported layers")}a[e]=i[e]})}return new r({controlType:e,changeHandler:n.changeHandler,layers:a,changeType:n.changeType})};s.prototype._getRegistryItem=function(e,r){var t=n.getRegistryItem(e,r);if(t){return t}var a=n.getDeveloperModeChangeChangeRegistryItem(r);if(a){return a}};s.prototype._isRegistryItemValidForLayer=function(e,n){var r=e.getLayers();return!!r[n]};return s});